{"version":3,"file":"maps.js","names":["map","initMap","console","log","google","maps","Map","document","getElementById","center","lat","lng","zoom","input","autocomplete","places","Autocomplete","componentRestrictions","country","bindTo","marker","Marker","anchorPoint","Point","addListener","setVisible","place","getPlace","inputValue","formatted_address","$","ready","val","geometry","viewport","setCenter","location","fitBounds","setPosition","address_components","short_name","join","window","alert","name"],"sources":["maps.js"],"mappings":"AAAA,IAAIA,IACJ,SAASC,UACPC,QAAQC,IAAI,gBACZH,IAAM,IAAII,OAAOC,KAAKC,IAAIC,SAASC,eAAe,OAAQ,CACxDC,OAAQ,CAACC,KAAM,QAASC,IAAK,UAC7BC,KAAM,KAGR,IAGIC,EAAQN,SAASC,eAAe,aAChCM,EAAe,IAAIV,OAAOC,KAAKU,OAAOC,aAAaH,EAJzC,CACZI,sBAAuB,CAAEC,QAAS,QAOpCJ,EAAaK,OAAO,SAAUnB,KAK9B,IAAIoB,EAAS,IAAIhB,OAAOC,KAAKgB,OAAO,CAClCrB,IAAKA,IACLsB,YAAa,IAAIlB,OAAOC,KAAKkB,MAAM,GAAI,MAGzCT,EAAaU,YAAY,iBAAiB,WAExCJ,EAAOK,YAAW,GAClB,IAAIC,EAAQZ,EAAaa,WACrBC,EAAaF,EAAMG,kBAOvB,GANA3B,QAAQC,IAAIyB,GAEZE,EAAEvB,UAAUwB,OAAM,WAChBD,EAAE,0BAA0BE,IAAIJ,EAClC,IAEKF,EAAMO,SAAX,CAQIP,EAAMO,SAASC,SACjBlC,IAAImC,UAAUT,EAAMO,SAASG,UAG7BpC,IAAIqC,UAAUX,EAAMO,SAASC,UAE/Bd,EAAOkB,YAAYZ,EAAMO,SAASG,UAClChB,EAAOK,YAAW,GAGdC,EAAMa,oBACE,CACPb,EAAMa,mBAAmB,IAAMb,EAAMa,mBAAmB,GAAGC,YAAc,GACzEd,EAAMa,mBAAmB,IAAMb,EAAMa,mBAAmB,GAAGC,YAAc,GACzEd,EAAMa,mBAAmB,IAAMb,EAAMa,mBAAmB,GAAGC,YAAc,IAC1EC,KAAK,IAlBT,MAFEC,OAAOC,MAAM,oCAAsCjB,EAAMkB,KAAO,IA2BpE,GACF,CAEAF,OAAOzC,QAAUA","sourcesContent":["var map;\r\nfunction initMap() {\r\n  console.log(\"initMap call\")\r\n  map = new google.maps.Map(document.getElementById('map'), {\r\n    center: {lat: -33.8688, lng: 151.2195},\r\n    zoom: 13\r\n  });\r\n  // Autocomplete restrictions\r\n  var options = {\r\n    componentRestrictions: { country: \"us\" },\r\n  };\r\n  var input = document.getElementById('pac_input');\r\n  var autocomplete = new google.maps.places.Autocomplete(input, options);\r\n  // Bind the map's bounds (viewport) property to the autocomplete object,\r\n  // so that the autocomplete requests use the current map bounds for the\r\n  // bounds option in the request.\r\n  autocomplete.bindTo('bounds', map);\r\n\r\n  //infowindow = new google.maps.InfoWindow();\r\n  //infowindowContent = document.getElementById('infowindow-content');\r\n  //infowindow.setContent(infowindowContent);\r\n  var marker = new google.maps.Marker({\r\n    map: map,\r\n    anchorPoint: new google.maps.Point(0, -29)\r\n  });\r\n\r\n  autocomplete.addListener('place_changed', function() {\r\n    //infowindow.close();\r\n    marker.setVisible(false);\r\n    var place = autocomplete.getPlace();\r\n    var inputValue = place.formatted_address;\r\n    console.log(inputValue);\r\n    // Mirror autocomplete value to inputs with name=location\r\n    $(document).ready(function () {\r\n      $('input[name=\"location\"]').val(inputValue);\r\n    });\r\n \r\n    if (!place.geometry) {\r\n      // User entered the name of a Place that was not suggested and\r\n      // pressed the Enter key, or the Place Details request failed.\r\n      window.alert(\"No details available for input: '\" + place.name + \"'\");\r\n      return;\r\n    }\r\n\r\n    // If the place has a geometry, then present it on a map.\r\n    if (place.geometry.viewport) {\r\n      map.setCenter(place.geometry.location);\r\n    } else {\r\n      \r\n      map.fitBounds(place.geometry.viewport);\r\n    }\r\n    marker.setPosition(place.geometry.location);\r\n    marker.setVisible(true);\r\n\r\n    var address = '';\r\n    if (place.address_components) {\r\n      address = [\r\n        (place.address_components[0] && place.address_components[0].short_name || ''),\r\n        (place.address_components[1] && place.address_components[1].short_name || ''),\r\n        (place.address_components[2] && place.address_components[2].short_name || '')\r\n      ].join(' ');\r\n    }\r\n\r\n    //infowindowContent.children['place-icon'].src = place.icon;\r\n    //infowindowContent.children['place-name'].textContent = place.name;\r\n    //infowindowContent.children['place-address'].textContent = address;\r\n    //infowindow.open(map, marker);\r\n  });\r\n}\r\n\r\nwindow.initMap = initMap;"]}