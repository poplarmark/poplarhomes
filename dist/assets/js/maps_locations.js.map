{"version":3,"file":"maps_locations.js","names":["map","initMap","google","maps","Map","document","getElementById","center","lat","lng","zoom","input","autocomplete","places","Autocomplete","componentRestrictions","country","bindTo","locations_geocoder","locations_map","marker","Marker","anchorPoint","Point","addListener","setVisible","place","getPlace","console","log","address_components","geometry","i","length","j","types","long_name","short_name","parsed_state","$","ready","val","parsed_city","parsed_street","parsed_zipcode","inputValue","formatted_address","viewport","setCenter","location","fitBounds","setPosition","join","window","alert","name","locations_address","Geocoder","locations_map_options","LatLng","mapId","zoomControl","scaleControl","streetViewControl","fullscreenControl","mapTypeControl","navigationControl","mapTypeId","MapTypeId","ROADMAP","geocode","address","results","status","GeocoderStatus","OK","ZERO_RESULTS","infowindow","InfoWindow","content","position","title","icon","event","open","loadEstimate","addEventListener","child","getElementsByClassName","jQuery","detach","appendTo","each","this","insertAfter","parent","find","onpaste","e","preventDefault"],"sources":["maps_locations.js"],"mappings":"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","sourcesContent":["var map;\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    center: { lat: -33.8688, lng: 151.2195 },\n    zoom: 13,\n  });\n  // Autocomplete restrictions\n  var options = {\n    componentRestrictions: { country: \"us\" },\n  };\n  var input = document.getElementById(\"pac_input\");\n  var autocomplete = new google.maps.places.Autocomplete(input, options);\n  // Bind the map's bounds (viewport) property to the autocomplete object,\n  // so that the autocomplete requests use the current map bounds for the\n  // bounds option in the request.\n  autocomplete.bindTo(\"bounds\", map);\n\n  //infowindow = new google.maps.InfoWindow();\n  //infowindowContent = document.getElementById('infowindow-content');\n  //infowindow.setContent(infowindowContent);\n  var marker = new google.maps.Marker({\n    map: map,\n    anchorPoint: new google.maps.Point(0, -29),\n  });\n\n  autocomplete.addListener(\"place_changed\", function () {\n    // infowindow.close();\n    marker.setVisible(false);\n    var place = autocomplete.getPlace();\n    console.log(place.address_components);\n    if (!place.geometry) {\n      // User entered the name of a Place that was not suggested and\n      // pressed the Enter key, or the Place Details request failed.\n      window.alert(\n        \"Can't find location: '\" + place.name + \"', in the autocomplete list\"\n      );\n      return;\n    }\n    // parse address\n    for (var i = 0; i < place.address_components.length; i++) {\n      for (var j = 0; j < place.address_components[i].types.length; j++) {\n        if (place.address_components[i].types[j] == \"country\") {\n          console.log(place.address_components[i].long_name); // country\n        }\n        if (\n          place.address_components[i].types[j] == \"administrative_area_level_1\"\n        ) {\n          console.log(place.address_components[i].short_name); // state\n          var parsed_state = place.address_components[i].short_name;\n          $(document).ready(function () {\n            $('input[name=\"original_property_state\"]').val(parsed_state);\n          });\n        }\n        if (place.address_components[i].types[j] == \"locality\") {\n          console.log(place.address_components[i].long_name); // city\n          var parsed_city = place.address_components[i].long_name;\n          $(document).ready(function () {\n            $('input[name=\"original_property_city\"]').val(parsed_city);\n          });\n        }\n        if (place.address_components[i].types[j] == \"route\") {\n          console.log(place.address_components[i].long_name); // street\n          var parsed_street = place.address_components[i].long_name;\n          $(document).ready(function () {\n            $('input[name=\"original_property_street\"]').val(parsed_street);\n          });\n        }\n        if (place.address_components[i].types[j] == \"postal_code\") {\n          console.log(place.address_components[i].long_name); // postal_code\n          var parsed_zipcode = place.address_components[i].long_name;\n          $(document).ready(function () {\n            $('input[name=\"postal_code\"]').val(parsed_zipcode);\n            $('input[name=\"original_property_zip_code\"]').val(parsed_zipcode);\n          });\n        }\n      }\n    }\n    var inputValue = place.formatted_address;\n    // Set input value of address field using Google API\n    $(document).ready(function () {\n      $('input[name=\"original_property_address\"]').val(inputValue);\n    });\n\n    // If the place has a geometry, then present it on a map.\n    if (place.geometry.viewport) {\n      map.setCenter(place.geometry.location);\n    } else {\n      map.fitBounds(place.geometry.viewport);\n    }\n    marker.setPosition(place.geometry.location);\n    marker.setVisible(true);\n\n    var address = \"\";\n    if (place.address_components) {\n      address = [\n        (place.address_components[0] &&\n          place.address_components[0].short_name) ||\n          \"\",\n        (place.address_components[1] &&\n          place.address_components[1].short_name) ||\n          \"\",\n        (place.address_components[2] &&\n          place.address_components[2].short_name) ||\n          \"\",\n      ].join(\" \");\n    }\n\n    //infowindowContent.children['place-icon'].src = place.icon;\n    //infowindowContent.children['place-name'].textContent = place.name;\n    //infowindowContent.children['place-address'].textContent = address;\n    //infowindow.open(map, marker);\n  });\n\n  // Locations map\n  var locations_geocoder;\n  var locations_map;\n  var locations_address =\n    \"{{wf {&quot;path&quot;:&quot;address-details&quot;,&quot;type&quot;:&quot;PlainText&quot;} }}\";\n  var locations_image =\n    \"https://uploads-ssl.webflow.com/631ada5b454cce3ae6474e07/63e3d8d5782ef44764b93261_icon_map-pin.svg\";\n\n  locations_geocoder = new google.maps.Geocoder();\n  var latlng = new google.maps.LatLng(44.85767897439299, -93.40209113112228);\n  var locations_map_options = {\n    zoom: 15,\n    center: latlng,\n    mapId: \"df2547a6ba8c2b01\",\n    zoomControl: true,\n    scaleControl: true,\n    streetViewControl: true,\n    fullscreenControl: false,\n    mapTypeControl: false,\n    navigationControl: true,\n    mapTypeId: google.maps.MapTypeId.ROADMAP,\n  };\n  locations_map = new google.maps.Map(\n    document.getElementById(\"locations_map\"),\n    locations_map_options\n  );\n  if (locations_geocoder) {\n    locations_geocoder.geocode(\n      {\n        address: locations_address,\n      },\n      function (results, status) {\n        if (status == google.maps.GeocoderStatus.OK) {\n          if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {\n            locations_map.setCenter(results[0].geometry.location);\n            var infowindow = new google.maps.InfoWindow({\n              content:\n                \"<p><b>\" +\n                \"{{wf {&quot;path&quot;:&quot;name&quot;,&quot;type&quot;:&quot;PlainText&quot;} }}\" +\n                \"</b></p><br><p>\" +\n                \"{{wf {&quot;path&quot;:&quot;address-details&quot;,&quot;type&quot;:&quot;PlainText&quot;} }}\" +\n                '</p><div style=\"border-top: 1px solid rgb(204, 204, 204); margin-top: 9px; padding: 6px; font-size: 13px; text-overflow: ellipsis; overflow: hidden; white-space: nowrap; font-family: Roboto, Arial;\"><a href=\"https://www.google.com/maps/search/?api=1&query={{wf {&quot;path&quot;:&quot;address-details&quot;,&quot;type&quot;:&quot;PlainText&quot;} }}\" target=\"_blank\" rel=\"noopener\" style=\"cursor: pointer; color: rgb(66, 127, 237); text-decoration: none;\">View on Google Maps</a></div>',\n            });\n\n            var marker = new google.maps.Marker({\n              position: results[0].geometry.location,\n              map: locations_map,\n              title: locations_address,\n              icon: locations_image,\n            });\n            google.maps.event.addListener(marker, \"click\", function () {\n              infowindow.open(locations_map, marker);\n            });\n          } else {\n            alert(\"No results found\");\n          }\n        } else {\n          alert(\n            \"Geocode was not successful for the following reason: \" + status\n          );\n        }\n      }\n    );\n  }\n\n  loadEstimate();\n}\n\nfunction loadEstimate() {\n  // move .pac-container inside #input_wrap-location\n  window.addEventListener(\"load\", function () {\n    var child = document.getElementsByClassName(\"pac-container\")[0];\n    jQuery(child).detach().appendTo(\"#input_wrap-location\");\n    console.log(\"pac_container loaded\");\n  });\n\n  // for non-chrome based browswers, move loading of $this script at the end of .pac-container\n  window.addEventListener(\"load\", function () {\n    $(document).ready(function () {\n      $(\"#onload-estimate-js\").each(function () {\n        $(this).insertAfter($(this).parent().find(\".pac-container\"));\n        console.log(\"pac_mover loader\");\n      });\n    });\n  });\n\n  // prevent user from copy/pasting input values;\n  // user must only select value from autocomplete\n  const pasted_input = document.getElementById(\"pac_input\");\n  pasted_input.onpaste = (e) => e.preventDefault();\n}\n\nwindow.initMap = initMap;\n"]}